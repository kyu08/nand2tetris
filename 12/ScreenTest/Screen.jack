// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Screen.jack
/**
 * A library of functions for displaying graphics on the screen.
 * The Hack physical screen consists of 512 rows (indexed 0..511, top to bottom)
 * of 256 pixels each (indexed 0..255, left to right). The top left pixel on 
 * the screen is indexed (0,0).
 */
class Screen {
    // false: white, true: black
    static boolean color;

    /** Initializes the Screen. */
    function void init() {
      let color = true;
      return;
    }

    /** Erases the entire screen. */
    function void clearScreen() {
      // TODO: impl
      return;
    }

    /** Sets the current color, to be used for all subsequent drawXXX commands.
     *  Black is represented by true, white by false. */
    function void setColor(boolean b) {
      let color = b;
      return;
    }

    /** Draws the (x,y) pixel, using the current color. */
    function void drawPixel(int x, int y) {
      var int addr, index, value, baseValue, i;
      let addr = 16384 + ((y * 32) + (x / 16));
      let index = x - ((x / 16) * 16);
      let value = Memory.peek(addr);
      // TODO: これだとcolor: trueのときなのでwhiteのときも考慮する(clearScreenを実装したあとの方がよさそうなので今はスキップ)
      let baseValue = 1; // 0000000000000001
      while (i < index) {
        // index回左にshift
        let baseValue = baseValue * 2;
        let i = i + 1;
      }

      do Memory.poke(addr, (value | baseValue));

      return;
    }

    /** Draws a line from pixel (x1,y1) to pixel (x2,y2), using the current color. */
    function void drawLine(int x1, int y1, int x2, int y2) {
      // TODO: impl
      return;
    }

    /** Draws a filled rectangle whose top left corner is (x1, y1)
     *  and bottom right corner is (x2,y2), using the current color. */
    function void drawRectangle(int x1, int y1, int x2, int y2) {
      // TODO: impl
      return;
    }

    /** Draws a filled circle of radius r<=181 around (x,y), using the current color. */
    function void drawCircle(int x, int y, int r) {
      // TODO: impl
      return;
    }
}
